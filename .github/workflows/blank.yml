name: Monitor Cluster Autoscaler Version

on:
  workflow_dispatch:

env:
  ARTIFACT_NAME: previous-autoscaler-tag
  ARTIFACT_FILENAME: previous_autoscaler_tag.txt

jobs:
  check-autoscaler:
    name: Check Cluster Autoscaler Version
    runs-on: ubuntu-latest

    outputs:
      latest: ${{ steps.get_latest.outputs.latest }}
      previous: ${{ steps.get_previous.outputs.previous }}

    steps:
      - name: Get latest cluster-autoscaler tag
        id: get_latest
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/kubernetes/autoscaler/releases | \
            jq -r '.[].tag_name' | \
            grep -E '^cluster-autoscaler-[0-9]+\.[0-9]+\.[0-9]+$' | \
            sort -V | \
            tail -n1)
          echo "latest=$latest_tag" >> $GITHUB_OUTPUT

      - name: Download previous tag artifact (if exists)
        id: download_previous
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
        continue-on-error: true

      - name: Read previous version (or default to 0)
        id: get_previous
        run: |
          if [[ -f "${{ env.ARTIFACT_FILENAME }}" ]]; then
            previous_tag=$(cat "${{ env.ARTIFACT_FILENAME }}")
          else
            previous_tag="0"
          fi
          echo "previous=$previous_tag" >> $GITHUB_OUTPUT

      - name: Debug tag values
        run: |
          echo "Latest tag: ${{ steps.get_latest.outputs.latest }}"
          echo "Previous tag: ${{ steps.get_previous.outputs.previous }}"

  store-latest-tag:
    name: Store Latest Tag as Artifact
    needs: check-autoscaler
    runs-on: ubuntu-latest

    steps:
      - name: Write latest tag to file
        run: echo "${{ needs.check-autoscaler.outputs.latest }}" > ${{ env.ARTIFACT_FILENAME }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_FILENAME }}
